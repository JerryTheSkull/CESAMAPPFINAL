<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class RolesSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Reset cached roles and permissions
        app()[\Spatie\Permission\PermissionRegistrar::class]->forgetCachedPermissions();

        // ğŸ†• CRÃ‰ER LES PERMISSIONS
        $permissions = [
            'view_users',
            'create_users', 
            'edit_users',
            'delete_users',
            'manage_roles',
            'view_profile',
            'edit_profile',
            'delete_profile',
        ];

        foreach ($permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
        }

        // ğŸ†• CRÃ‰ER LES RÃ”LES
        $adminRole = Role::firstOrCreate(['name' => 'admin']);
        $etudiantRole = Role::firstOrCreate(['name' => 'etudiant']);

        // ğŸ†• ASSIGNER LES PERMISSIONS AUX RÃ”LES
        // Admin peut tout faire
        $adminRole->givePermissionTo(Permission::all());

        // Ã‰tudiant peut seulement gÃ©rer son profil
        $etudiantRole->givePermissionTo([
            'view_profile',
            'edit_profile', 
            'delete_profile'
        ]);

        $this->command->info('âœ… RÃ´les et permissions crÃ©Ã©s avec succÃ¨s !');
        $this->command->info('ğŸ“‹ RÃ´les crÃ©Ã©s : admin, etudiant');
        $this->command->info('ğŸ”‘ Permissions assignÃ©es selon les rÃ´les');
    }
}